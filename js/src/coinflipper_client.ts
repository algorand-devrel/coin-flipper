import algosdk from "algosdk";
import * as bkr from "beaker-ts";
export class CoinFlipper extends bkr.ApplicationClient {
    desc: string = "";
    override appSchema: bkr.Schema = { declared: { beacon_app_id: { type: bkr.AVMType.uint64, key: "beacon_app_id", desc: "", static: false }, bets_outstanding: { type: bkr.AVMType.uint64, key: "bets_outstanding", desc: "", static: false }, max_bet: { type: bkr.AVMType.uint64, key: "max_bet", desc: "", static: false }, min_bet: { type: bkr.AVMType.uint64, key: "min_bet", desc: "", static: false } }, dynamic: {} };
    override acctSchema: bkr.Schema = { declared: { bet: { type: bkr.AVMType.uint64, key: "bet", desc: "", static: false }, commitment_round: { type: bkr.AVMType.uint64, key: "commitment_round", desc: "", static: false }, heads: { type: bkr.AVMType.uint64, key: "heads", desc: "", static: false } }, dynamic: {} };
    override approvalProgram: string = "I3ByYWdtYSB2ZXJzaW9uIDcKaW50Y2Jsb2NrIDAgMSAyCmJ5dGVjYmxvY2sgMHg2MjY1NzQ3MzVmNmY3NTc0NzM3NDYxNmU2NDY5NmU2NyAweDYzNmY2ZDZkNjk3NDZkNjU2ZTc0NWY3MjZmNzU2ZTY0IDB4NjI2NTc0IDB4Njg2NTYxNjQ3MyAweDYyNjU2MTYzNmY2ZTVmNjE3MDcwNWY2OTY0IDB4NmQ2MTc4NWY2MjY1NzQgMHg2ZDY5NmU1ZjYyNjU3NAp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sNgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDhmMjhiZGFhIC8vICJmbGlwX2NvaW4ocGF5LHVpbnQ2NCxib29sKXZvaWQiCj09CmJueiBtYWluX2w1CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4YmExMWIzZmYgLy8gInNldHRsZShhcHBsaWNhdGlvbilzdHJpbmciCj09CmJueiBtYWluX2w0CmVycgptYWluX2w0Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKY2FsbHN1YiBzZXR0bGVfMTAKc3RvcmUgMwpwdXNoYnl0ZXMgMHgxNTFmN2M3NSAvLyAweDE1MWY3Yzc1CmxvYWQgMwpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKc3RvcmUgMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmludGNfMCAvLyAwCnB1c2hpbnQgOCAvLyA4CioKZ2V0Yml0CnN0b3JlIDIKdHhuIEdyb3VwSW5kZXgKaW50Y18xIC8vIDEKLQpzdG9yZSAwCmxvYWQgMApndHhucyBUeXBlRW51bQppbnRjXzEgLy8gcGF5Cj09CmFzc2VydApsb2FkIDAKbG9hZCAxCmxvYWQgMgpjYWxsc3ViIGZsaXBjb2luXzcKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDE2CnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE9wdEluCj09CmJueiBtYWluX2wxNQp0eG4gT25Db21wbGV0aW9uCmludGNfMiAvLyBDbG9zZU91dAo9PQpibnogbWFpbl9sMTQKdHhuIE9uQ29tcGxldGlvbgpwdXNoaW50IDQgLy8gVXBkYXRlQXBwbGljYXRpb24KPT0KYm56IG1haW5fbDEzCnR4biBPbkNvbXBsZXRpb24KcHVzaGludCA1IC8vIERlbGV0ZUFwcGxpY2F0aW9uCj09CmJueiBtYWluX2wxMgplcnIKbWFpbl9sMTI6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIGRlbGV0ZV8yCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMzoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgdXBkYXRlXzQKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDE0Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBjbG9zZW91dF82CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxNToKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgb3B0aW5fNQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTY6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CmFzc2VydApjYWxsc3ViIGNyZWF0ZV8wCmludGNfMSAvLyAxCnJldHVybgoKLy8gY3JlYXRlCmNyZWF0ZV8wOgpieXRlYyA0IC8vICJiZWFjb25fYXBwX2lkIgpwdXNoaW50IDExMDA5NjAyNiAvLyAxMTAwOTYwMjYKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMCAvLyAiYmV0c19vdXRzdGFuZGluZyIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNSAvLyAibWF4X2JldCIKcHVzaGludCAxMDAwMDAwIC8vIDEwMDAwMDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNiAvLyAibWluX2JldCIKcHVzaGludCA1MDAwIC8vIDUwMDAKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfMToKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHN1YgoKLy8gZGVsZXRlCmRlbGV0ZV8yOgp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfMQovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmJ5dGVjXzAgLy8gImJldHNfb3V0c3RhbmRpbmciCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAwCj09CmFzc2VydAppdHhuX2JlZ2luCmludGNfMSAvLyBwYXkKaXR4bl9maWVsZCBUeXBlRW51bQp0eG4gU2VuZGVyCml0eG5fZmllbGQgUmVjZWl2ZXIKaW50Y18wIC8vIDAKaXR4bl9maWVsZCBBbW91bnQKdHhuIFNlbmRlcgppdHhuX2ZpZWxkIENsb3NlUmVtYWluZGVyVG8KaXR4bl9zdWJtaXQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfMzoKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHN1YgoKLy8gdXBkYXRlCnVwZGF0ZV80Ogp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfMwovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmludGNfMSAvLyAxCnJldHVybgoKLy8gb3B0X2luCm9wdGluXzU6CmludGNfMSAvLyAxCnJldHVybgoKLy8gY2xvc2Vfb3V0CmNsb3Nlb3V0XzY6CnR4biBTZW5kZXIKYnl0ZWNfMSAvLyAiY29tbWl0bWVudF9yb3VuZCIKYXBwX2xvY2FsX2dldAppbnRjXzAgLy8gMAo+CmJ6IGNsb3Nlb3V0XzZfbDIKYnl0ZWNfMCAvLyAiYmV0c19vdXRzdGFuZGluZyIKYnl0ZWNfMCAvLyAiYmV0c19vdXRzdGFuZGluZyIKYXBwX2dsb2JhbF9nZXQKaW50Y18xIC8vIDEKLQphcHBfZ2xvYmFsX3B1dApjbG9zZW91dF82X2wyOgppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGZsaXBfY29pbgpmbGlwY29pbl83OgpzdG9yZSA5CnN0b3JlIDgKc3RvcmUgNwpsb2FkIDcKZ3R4bnMgQW1vdW50CmJ5dGVjIDYgLy8gIm1pbl9iZXQiCmFwcF9nbG9iYWxfZ2V0Cj49Ci8vIHBheW1lbnQgbXVzdCBiZSA+PSA1bUEgYW5kIDwgMUEKYXNzZXJ0CmxvYWQgNwpndHhucyBBbW91bnQKYnl0ZWMgNSAvLyAibWF4X2JldCIKYXBwX2dsb2JhbF9nZXQKPD0KLy8gcGF5bWVudCBtdXN0IGJlID49IDVtQSBhbmQgPCAxQQphc3NlcnQKbG9hZCA3Cmd0eG5zIFJlY2VpdmVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCj09Ci8vIHBheW1lbnQgbXVzdCB0byB0aGUgY29udHJhY3QgYWRkcmVzcwphc3NlcnQKbG9hZCA4Cmdsb2JhbCBSb3VuZAo+Ci8vIHJvdW5kIG11c3QgYmUgYXQgbGVhc3QgMSBpbnRlcnZhbCBpbiB0aGUgZnV0dXJlIGFuZCBubyBtb3JlIHRoYW4gMTAgcm91bmRzIGluIHRoZSBmdXR1cmUKYXNzZXJ0CmxvYWQgOApnbG9iYWwgUm91bmQKcHVzaGludCAxMCAvLyAxMAorCjwKLy8gcm91bmQgbXVzdCBiZSBhdCBsZWFzdCAxIGludGVydmFsIGluIHRoZSBmdXR1cmUgYW5kIG5vIG1vcmUgdGhhbiAxMCByb3VuZHMgaW4gdGhlIGZ1dHVyZQphc3NlcnQKdHhuIFNlbmRlcgppbnRjXzAgLy8gMApieXRlY18xIC8vICJjb21taXRtZW50X3JvdW5kIgphcHBfbG9jYWxfZ2V0X2V4CnN0b3JlIDExCnN0b3JlIDEwCmxvYWQgMTEKIQovLyB0aGVyZSBpcyBhbHJlYWR5IGEgYmV0IG91dHN0YW5kaW5nCmFzc2VydAp0eG4gU2VuZGVyCmJ5dGVjXzEgLy8gImNvbW1pdG1lbnRfcm91bmQiCmxvYWQgOAphcHBfbG9jYWxfcHV0CnR4biBTZW5kZXIKYnl0ZWNfMiAvLyAiYmV0Igpsb2FkIDcKZ3R4bnMgQW1vdW50CmFwcF9sb2NhbF9wdXQKdHhuIFNlbmRlcgpieXRlY18zIC8vICJoZWFkcyIKbG9hZCA5CmFwcF9sb2NhbF9wdXQKYnl0ZWNfMCAvLyAiYmV0c19vdXRzdGFuZGluZyIKYnl0ZWNfMCAvLyAiYmV0c19vdXRzdGFuZGluZyIKYXBwX2dsb2JhbF9nZXQKaW50Y18xIC8vIDEKKwphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIGdldF9yYW5kb21uZXNzCmdldHJhbmRvbW5lc3NfODoKdHhuIFNlbmRlcgpieXRlY18xIC8vICJjb21taXRtZW50X3JvdW5kIgphcHBfbG9jYWxfZ2V0CnN0b3JlIDEyCmludGNfMCAvLyAwCml0b2IKZXh0cmFjdCA2IDAKcHVzaGJ5dGVzIDB4IC8vICIiCmNvbmNhdApzdG9yZSAxMwppdHhuX2JlZ2luCnB1c2hpbnQgNiAvLyBhcHBsCml0eG5fZmllbGQgVHlwZUVudW0KYnl0ZWMgNCAvLyAiYmVhY29uX2FwcF9pZCIKYXBwX2dsb2JhbF9nZXQKaXR4bl9maWVsZCBBcHBsaWNhdGlvbklECnB1c2hieXRlcyAweDQ3YzIwYzIzIC8vICJtdXN0X2dldCh1aW50NjQsYnl0ZVtdKWJ5dGVbXSIKaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKbG9hZCAxMgppdG9iCml0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCmxvYWQgMTMKaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKaXR4bl9zdWJtaXQKaXR4biBMYXN0TG9nCmV4dHJhY3QgNCAwCnJldHN1YgoKLy8gcGF5b3V0CnBheW91dF85OgppdHhuX2JlZ2luCmludGNfMSAvLyBwYXkKaXR4bl9maWVsZCBUeXBlRW51bQp0eG4gU2VuZGVyCml0eG5fZmllbGQgUmVjZWl2ZXIKdHhuIFNlbmRlcgpieXRlY18yIC8vICJiZXQiCmFwcF9sb2NhbF9nZXQKaW50Y18yIC8vIDIKKgppdHhuX2ZpZWxkIEFtb3VudAppdHhuX3N1Ym1pdApyZXRzdWIKCi8vIHNldHRsZQpzZXR0bGVfMTA6CnN0b3JlIDQKY2FsbHN1YiBnZXRyYW5kb21uZXNzXzgKZXh0cmFjdCAyIDAKaW50Y18wIC8vIDAKZ2V0Yml0CnN0b3JlIDYKdHhuIFNlbmRlcgpieXRlY18zIC8vICJoZWFkcyIKYXBwX2xvY2FsX2dldApsb2FkIDYKPT0KYm56IHNldHRsZV8xMF9sMgpwdXNoYnl0ZXMgMHg1OTZmNzUyMDZjNmY3Mzc0MjAzYTI4IC8vICJZb3UgbG9zdCA6KCIKc3RvcmUgNQpsb2FkIDUKbGVuCml0b2IKZXh0cmFjdCA2IDAKbG9hZCA1CmNvbmNhdApzdG9yZSA1CmIgc2V0dGxlXzEwX2wzCnNldHRsZV8xMF9sMjoKY2FsbHN1YiBwYXlvdXRfOQpwdXNoYnl0ZXMgMHg1OTZmNzUyMDc3NmY2ZTIxIC8vICJZb3Ugd29uISIKc3RvcmUgNQpsb2FkIDUKbGVuCml0b2IKZXh0cmFjdCA2IDAKbG9hZCA1CmNvbmNhdApzdG9yZSA1CnNldHRsZV8xMF9sMzoKdHhuIFNlbmRlcgpieXRlY18xIC8vICJjb21taXRtZW50X3JvdW5kIgphcHBfbG9jYWxfZGVsCnR4biBTZW5kZXIKYnl0ZWNfMiAvLyAiYmV0IgphcHBfbG9jYWxfZGVsCnR4biBTZW5kZXIKYnl0ZWNfMyAvLyAiaGVhZHMiCmFwcF9sb2NhbF9kZWwKYnl0ZWNfMCAvLyAiYmV0c19vdXRzdGFuZGluZyIKYnl0ZWNfMCAvLyAiYmV0c19vdXRzdGFuZGluZyIKYXBwX2dsb2JhbF9nZXQKaW50Y18xIC8vIDEKLQphcHBfZ2xvYmFsX3B1dApsb2FkIDUKcmV0c3Vi";
    override clearProgram: string = "I3ByYWdtYSB2ZXJzaW9uIDcKaW50Y2Jsb2NrIDEgMApieXRlY2Jsb2NrIDB4NjI2NTc0NzM1ZjZmNzU3NDczNzQ2MTZlNjQ2OTZlNjcKdHhuIE51bUFwcEFyZ3MKaW50Y18xIC8vIDAKPT0KYm56IG1haW5fbDIKZXJyCm1haW5fbDI6CmNhbGxzdWIgY2xlYXJzdGF0ZV8wCmludGNfMCAvLyAxCnJldHVybgoKLy8gY2xlYXJfc3RhdGUKY2xlYXJzdGF0ZV8wOgp0eG4gU2VuZGVyCnB1c2hieXRlcyAweDYzNmY2ZDZkNjk3NDZkNjU2ZTc0NWY3MjZmNzU2ZTY0IC8vICJjb21taXRtZW50X3JvdW5kIgphcHBfbG9jYWxfZ2V0CmludGNfMSAvLyAwCj4KYnogY2xlYXJzdGF0ZV8wX2wyCmJ5dGVjXzAgLy8gImJldHNfb3V0c3RhbmRpbmciCmJ5dGVjXzAgLy8gImJldHNfb3V0c3RhbmRpbmciCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAxCi0KYXBwX2dsb2JhbF9wdXQKY2xlYXJzdGF0ZV8wX2wyOgppbnRjXzAgLy8gMQpyZXR1cm4=";
    override methods: algosdk.ABIMethod[] = [
        new algosdk.ABIMethod({ name: "flip_coin", desc: "", args: [{ type: "pay", name: "bet_payment", desc: "" }, { type: "uint64", name: "round", desc: "" }, { type: "bool", name: "heads", desc: "" }], returns: { type: "void", desc: "" } }),
        new algosdk.ABIMethod({ name: "settle", desc: "", args: [{ type: "application", name: "beacon_app", desc: "" }], returns: { type: "string", desc: "" } })
    ];
    async flip_coin(args: {
        bet_payment: algosdk.TransactionWithSigner | algosdk.Transaction;
        round: bigint;
        heads: boolean;
    }, txnParams?: bkr.TransactionOverrides): Promise<bkr.ABIResult<void>> {
        const result = await this.call(algosdk.getMethodByName(this.methods, "flip_coin"), { bet_payment: args.bet_payment, round: args.round, heads: args.heads }, txnParams);
        return new bkr.ABIResult<void>(result);
    }
    async settle(args: {
        beacon_app?: bigint;
    }, txnParams?: bkr.TransactionOverrides): Promise<bkr.ABIResult<string>> {
        const result = await this.call(algosdk.getMethodByName(this.methods, "settle"), { beacon_app: args.beacon_app === undefined ? await this.resolve("global-state", "beacon_app_id") : args.beacon_app }, txnParams);
        return new bkr.ABIResult<string>(result, result.returnValue as string);
    }
}
