#pragma version 7
intcblock 0 1 2
bytecblock 0x626574735f6f75747374616e64696e67 0x636f6d6d69746d656e745f726f756e64 0x626574 0x626561636f6e5f6170705f6964 0x6d61785f626574 0x6d696e5f626574 0x6865616473 0x00
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x352d0f12 // "configure(uint64,uint64,uint64)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x8f28bdaa // "flip_coin(pay,uint64,bool)void"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x982fa8e5 // "settle(account,application)(bool,uint64)"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 6
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 7
load 6
load 7
callsub settle_12
store 8
pushbytes 0x151f7c75 // 0x151f7c75
load 8
concat
log
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 4
txna ApplicationArgs 2
intc_0 // 0
pushint 8 // 8
*
getbit
store 5
txn GroupIndex
intc_1 // 1
-
store 3
load 3
gtxns TypeEnum
intc_1 // pay
==
assert
load 3
load 4
load 5
callsub flipcoin_9
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 0
txna ApplicationArgs 2
btoi
store 1
txna ApplicationArgs 3
btoi
store 2
load 0
load 1
load 2
callsub configure_8
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l18
txn OnCompletion
intc_1 // OptIn
==
bnz main_l17
txn OnCompletion
intc_2 // CloseOut
==
bnz main_l16
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l15
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l14
err
main_l14:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_3
intc_1 // 1
return
main_l15:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_5
intc_1 // 1
return
main_l16:
txn ApplicationID
intc_0 // 0
!=
assert
callsub closeout_7
intc_1 // 1
return
main_l17:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_6
intc_1 // 1
return
main_l18:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
bytec_3 // "beacon_app_id"
pushint 110096026 // 110096026
app_global_put
bytec_0 // "bets_outstanding"
intc_0 // 0
app_global_put
bytec 4 // "max_bet"
pushint 1000000 // 1000000
app_global_put
bytec 5 // "min_bet"
pushint 5000 // 5000
app_global_put
retsub

// auth_only
authonly_1:
global CreatorAddress
==
retsub

// auth_only
authonly_2:
global CreatorAddress
==
retsub

// delete
delete_3:
txn Sender
callsub authonly_2
// unauthorized
assert
bytec_0 // "bets_outstanding"
app_global_get
intc_0 // 0
==
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
txn Sender
itxn_field Receiver
intc_0 // 0
itxn_field Amount
txn Sender
itxn_field CloseRemainderTo
itxn_submit
intc_1 // 1
return

// auth_only
authonly_4:
global CreatorAddress
==
retsub

// update
update_5:
txn Sender
callsub authonly_4
// unauthorized
assert
intc_1 // 1
return

// opt_in
optin_6:
intc_1 // 1
return

// close_out
closeout_7:
txn Sender
bytec_1 // "commitment_round"
app_local_get
intc_0 // 0
>
bz closeout_7_l2
bytec_0 // "bets_outstanding"
bytec_0 // "bets_outstanding"
app_global_get
intc_1 // 1
-
app_global_put
closeout_7_l2:
intc_1 // 1
return

// configure
configure_8:
store 17
store 16
store 15
txn Sender
callsub authonly_1
// unauthorized
assert
load 16
load 17
<
// min bet must be < max bet
assert
bytec_3 // "beacon_app_id"
load 15
app_global_put
bytec 5 // "min_bet"
load 16
app_global_put
bytec 4 // "max_bet"
load 17
app_global_put
retsub

// flip_coin
flipcoin_9:
store 20
store 19
store 18
load 18
gtxns Amount
bytec 5 // "min_bet"
app_global_get
>=
// payment must be >= 5mA and < 1A
assert
load 18
gtxns Amount
bytec 4 // "max_bet"
app_global_get
<=
// payment must be >= 5mA and < 1A
assert
load 18
gtxns Receiver
global CurrentApplicationAddress
==
// payment must to the contract address
assert
load 19
global Round
>
// round requested must be at least 1 round in the future and no more than 10 rounds in the future
assert
load 19
global Round
pushint 10 // 10
+
<
// round requested must be at least 1 round in the future and no more than 10 rounds in the future
assert
txn Sender
intc_0 // 0
bytec_1 // "commitment_round"
app_local_get_ex
store 22
store 21
load 22
!
// there is already a bet outstanding
assert
txn Sender
bytec_1 // "commitment_round"
load 19
app_local_put
txn Sender
bytec_2 // "bet"
load 18
gtxns Amount
app_local_put
txn Sender
bytec 6 // "heads"
load 20
app_local_put
bytec_0 // "bets_outstanding"
bytec_0 // "bets_outstanding"
app_global_get
intc_1 // 1
+
app_global_put
retsub

// get_randomness
getrandomness_10:
store 23
intc_0 // 0
itob
extract 6 0
pushbytes 0x // ""
concat
store 24
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
bytec_3 // "beacon_app_id"
app_global_get
itxn_field ApplicationID
pushbytes 0x47c20c23 // "must_get(uint64,byte[])byte[]"
itxn_field ApplicationArgs
load 23
itob
itxn_field ApplicationArgs
load 24
itxn_field ApplicationArgs
itxn_submit
itxn LastLog
extract 4 0
retsub

// payout
payout_11:
store 25
itxn_begin
intc_1 // pay
itxn_field TypeEnum
load 25
itxn_field Receiver
load 25
bytec_2 // "bet"
app_local_get
intc_2 // 2
*
itxn_field Amount
itxn_submit
retsub

// settle
settle_12:
store 10
store 9
load 9
txnas Accounts
bytec_1 // "commitment_round"
app_local_get
callsub getrandomness_10
store 14
txn Sender
bytec 6 // "heads"
app_local_get
load 14
extract 2 0
intc_0 // 0
getbit
==
!
!
store 12
load 12
bnz settle_12_l2
load 9
txnas Accounts
bytec_2 // "bet"
app_local_get
store 13
bytec 7 // 0x00
intc_0 // 0
load 12
setbit
load 13
itob
concat
store 11
b settle_12_l3
settle_12_l2:
load 9
txnas Accounts
callsub payout_11
load 9
txnas Accounts
bytec_2 // "bet"
app_local_get
intc_2 // 2
*
store 13
bytec 7 // 0x00
intc_0 // 0
load 12
setbit
load 13
itob
concat
store 11
settle_12_l3:
load 9
txnas Accounts
bytec_1 // "commitment_round"
app_local_del
load 9
txnas Accounts
bytec_2 // "bet"
app_local_del
load 9
txnas Accounts
bytec 6 // "heads"
app_local_del
bytec_0 // "bets_outstanding"
bytec_0 // "bets_outstanding"
app_global_get
intc_1 // 1
-
app_global_put
load 11
retsub